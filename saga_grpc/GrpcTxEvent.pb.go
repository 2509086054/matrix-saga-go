// Code generated by protoc-gen-go. DO NOT EDIT.
// source: GrpcTxEvent.proto

package saga_grpc

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type GrpcServiceConfig struct {
	ServiceName          string   `protobuf:"bytes,1,opt,name=serviceName,proto3" json:"serviceName,omitempty"`
	InstanceId           string   `protobuf:"bytes,2,opt,name=instanceId,proto3" json:"instanceId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GrpcServiceConfig) Reset()         { *m = GrpcServiceConfig{} }
func (m *GrpcServiceConfig) String() string { return proto.CompactTextString(m) }
func (*GrpcServiceConfig) ProtoMessage()    {}
func (*GrpcServiceConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_GrpcTxEvent_48a5d9a498bff5ac, []int{0}
}
func (m *GrpcServiceConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GrpcServiceConfig.Unmarshal(m, b)
}
func (m *GrpcServiceConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GrpcServiceConfig.Marshal(b, m, deterministic)
}
func (dst *GrpcServiceConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GrpcServiceConfig.Merge(dst, src)
}
func (m *GrpcServiceConfig) XXX_Size() int {
	return xxx_messageInfo_GrpcServiceConfig.Size(m)
}
func (m *GrpcServiceConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_GrpcServiceConfig.DiscardUnknown(m)
}

var xxx_messageInfo_GrpcServiceConfig proto.InternalMessageInfo

func (m *GrpcServiceConfig) GetServiceName() string {
	if m != nil {
		return m.ServiceName
	}
	return ""
}

func (m *GrpcServiceConfig) GetInstanceId() string {
	if m != nil {
		return m.InstanceId
	}
	return ""
}

type GrpcAck struct {
	Aborted              bool     `protobuf:"varint,1,opt,name=aborted,proto3" json:"aborted,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GrpcAck) Reset()         { *m = GrpcAck{} }
func (m *GrpcAck) String() string { return proto.CompactTextString(m) }
func (*GrpcAck) ProtoMessage()    {}
func (*GrpcAck) Descriptor() ([]byte, []int) {
	return fileDescriptor_GrpcTxEvent_48a5d9a498bff5ac, []int{1}
}
func (m *GrpcAck) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GrpcAck.Unmarshal(m, b)
}
func (m *GrpcAck) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GrpcAck.Marshal(b, m, deterministic)
}
func (dst *GrpcAck) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GrpcAck.Merge(dst, src)
}
func (m *GrpcAck) XXX_Size() int {
	return xxx_messageInfo_GrpcAck.Size(m)
}
func (m *GrpcAck) XXX_DiscardUnknown() {
	xxx_messageInfo_GrpcAck.DiscardUnknown(m)
}

var xxx_messageInfo_GrpcAck proto.InternalMessageInfo

func (m *GrpcAck) GetAborted() bool {
	if m != nil {
		return m.Aborted
	}
	return false
}

type GrpcTxEvent struct {
	Timestamp            int64    `protobuf:"varint,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	GlobalTxId           string   `protobuf:"bytes,2,opt,name=globalTxId,proto3" json:"globalTxId,omitempty"`
	LocalTxId            string   `protobuf:"bytes,3,opt,name=localTxId,proto3" json:"localTxId,omitempty"`
	ParentTxId           string   `protobuf:"bytes,4,opt,name=parentTxId,proto3" json:"parentTxId,omitempty"`
	Type                 string   `protobuf:"bytes,5,opt,name=type,proto3" json:"type,omitempty"`
	CompensationMethod   string   `protobuf:"bytes,6,opt,name=compensationMethod,proto3" json:"compensationMethod,omitempty"`
	Payloads             []byte   `protobuf:"bytes,7,opt,name=payloads,proto3" json:"payloads,omitempty"`
	ServiceName          string   `protobuf:"bytes,8,opt,name=serviceName,proto3" json:"serviceName,omitempty"`
	InstanceId           string   `protobuf:"bytes,9,opt,name=instanceId,proto3" json:"instanceId,omitempty"`
	Timeout              int32    `protobuf:"varint,10,opt,name=timeout,proto3" json:"timeout,omitempty"`
	Retries              int32    `protobuf:"varint,11,opt,name=retries,proto3" json:"retries,omitempty"`
	RetryMethod          string   `protobuf:"bytes,12,opt,name=retryMethod,proto3" json:"retryMethod,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GrpcTxEvent) Reset()         { *m = GrpcTxEvent{} }
func (m *GrpcTxEvent) String() string { return proto.CompactTextString(m) }
func (*GrpcTxEvent) ProtoMessage()    {}
func (*GrpcTxEvent) Descriptor() ([]byte, []int) {
	return fileDescriptor_GrpcTxEvent_48a5d9a498bff5ac, []int{2}
}
func (m *GrpcTxEvent) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GrpcTxEvent.Unmarshal(m, b)
}
func (m *GrpcTxEvent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GrpcTxEvent.Marshal(b, m, deterministic)
}
func (dst *GrpcTxEvent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GrpcTxEvent.Merge(dst, src)
}
func (m *GrpcTxEvent) XXX_Size() int {
	return xxx_messageInfo_GrpcTxEvent.Size(m)
}
func (m *GrpcTxEvent) XXX_DiscardUnknown() {
	xxx_messageInfo_GrpcTxEvent.DiscardUnknown(m)
}

var xxx_messageInfo_GrpcTxEvent proto.InternalMessageInfo

func (m *GrpcTxEvent) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *GrpcTxEvent) GetGlobalTxId() string {
	if m != nil {
		return m.GlobalTxId
	}
	return ""
}

func (m *GrpcTxEvent) GetLocalTxId() string {
	if m != nil {
		return m.LocalTxId
	}
	return ""
}

func (m *GrpcTxEvent) GetParentTxId() string {
	if m != nil {
		return m.ParentTxId
	}
	return ""
}

func (m *GrpcTxEvent) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *GrpcTxEvent) GetCompensationMethod() string {
	if m != nil {
		return m.CompensationMethod
	}
	return ""
}

func (m *GrpcTxEvent) GetPayloads() []byte {
	if m != nil {
		return m.Payloads
	}
	return nil
}

func (m *GrpcTxEvent) GetServiceName() string {
	if m != nil {
		return m.ServiceName
	}
	return ""
}

func (m *GrpcTxEvent) GetInstanceId() string {
	if m != nil {
		return m.InstanceId
	}
	return ""
}

func (m *GrpcTxEvent) GetTimeout() int32 {
	if m != nil {
		return m.Timeout
	}
	return 0
}

func (m *GrpcTxEvent) GetRetries() int32 {
	if m != nil {
		return m.Retries
	}
	return 0
}

func (m *GrpcTxEvent) GetRetryMethod() string {
	if m != nil {
		return m.RetryMethod
	}
	return ""
}

type GrpcCompensateCommand struct {
	GlobalTxId           string   `protobuf:"bytes,1,opt,name=globalTxId,proto3" json:"globalTxId,omitempty"`
	LocalTxId            string   `protobuf:"bytes,2,opt,name=localTxId,proto3" json:"localTxId,omitempty"`
	ParentTxId           string   `protobuf:"bytes,3,opt,name=parentTxId,proto3" json:"parentTxId,omitempty"`
	CompensationMethod   string   `protobuf:"bytes,4,opt,name=compensationMethod,proto3" json:"compensationMethod,omitempty"`
	Payloads             []byte   `protobuf:"bytes,5,opt,name=payloads,proto3" json:"payloads,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GrpcCompensateCommand) Reset()         { *m = GrpcCompensateCommand{} }
func (m *GrpcCompensateCommand) String() string { return proto.CompactTextString(m) }
func (*GrpcCompensateCommand) ProtoMessage()    {}
func (*GrpcCompensateCommand) Descriptor() ([]byte, []int) {
	return fileDescriptor_GrpcTxEvent_48a5d9a498bff5ac, []int{3}
}
func (m *GrpcCompensateCommand) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GrpcCompensateCommand.Unmarshal(m, b)
}
func (m *GrpcCompensateCommand) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GrpcCompensateCommand.Marshal(b, m, deterministic)
}
func (dst *GrpcCompensateCommand) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GrpcCompensateCommand.Merge(dst, src)
}
func (m *GrpcCompensateCommand) XXX_Size() int {
	return xxx_messageInfo_GrpcCompensateCommand.Size(m)
}
func (m *GrpcCompensateCommand) XXX_DiscardUnknown() {
	xxx_messageInfo_GrpcCompensateCommand.DiscardUnknown(m)
}

var xxx_messageInfo_GrpcCompensateCommand proto.InternalMessageInfo

func (m *GrpcCompensateCommand) GetGlobalTxId() string {
	if m != nil {
		return m.GlobalTxId
	}
	return ""
}

func (m *GrpcCompensateCommand) GetLocalTxId() string {
	if m != nil {
		return m.LocalTxId
	}
	return ""
}

func (m *GrpcCompensateCommand) GetParentTxId() string {
	if m != nil {
		return m.ParentTxId
	}
	return ""
}

func (m *GrpcCompensateCommand) GetCompensationMethod() string {
	if m != nil {
		return m.CompensationMethod
	}
	return ""
}

func (m *GrpcCompensateCommand) GetPayloads() []byte {
	if m != nil {
		return m.Payloads
	}
	return nil
}

func init() {
	proto.RegisterType((*GrpcServiceConfig)(nil), "GrpcServiceConfig")
	proto.RegisterType((*GrpcAck)(nil), "GrpcAck")
	proto.RegisterType((*GrpcTxEvent)(nil), "GrpcTxEvent")
	proto.RegisterType((*GrpcCompensateCommand)(nil), "GrpcCompensateCommand")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// TxEventServiceClient is the client API for TxEventService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type TxEventServiceClient interface {
	OnConnected(ctx context.Context, in *GrpcServiceConfig, opts ...grpc.CallOption) (TxEventService_OnConnectedClient, error)
	OnTxEvent(ctx context.Context, in *GrpcTxEvent, opts ...grpc.CallOption) (*GrpcAck, error)
	OnDisconnected(ctx context.Context, in *GrpcServiceConfig, opts ...grpc.CallOption) (*GrpcAck, error)
}

type txEventServiceClient struct {
	cc *grpc.ClientConn
}

func NewTxEventServiceClient(cc *grpc.ClientConn) TxEventServiceClient {
	return &txEventServiceClient{cc}
}

func (c *txEventServiceClient) OnConnected(ctx context.Context, in *GrpcServiceConfig, opts ...grpc.CallOption) (TxEventService_OnConnectedClient, error) {
	stream, err := c.cc.NewStream(ctx, &_TxEventService_serviceDesc.Streams[0], "/TxEventService/OnConnected", opts...)
	if err != nil {
		return nil, err
	}
	x := &txEventServiceOnConnectedClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type TxEventService_OnConnectedClient interface {
	Recv() (*GrpcCompensateCommand, error)
	grpc.ClientStream
}

type txEventServiceOnConnectedClient struct {
	grpc.ClientStream
}

func (x *txEventServiceOnConnectedClient) Recv() (*GrpcCompensateCommand, error) {
	m := new(GrpcCompensateCommand)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *txEventServiceClient) OnTxEvent(ctx context.Context, in *GrpcTxEvent, opts ...grpc.CallOption) (*GrpcAck, error) {
	out := new(GrpcAck)
	err := c.cc.Invoke(ctx, "/TxEventService/OnTxEvent", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *txEventServiceClient) OnDisconnected(ctx context.Context, in *GrpcServiceConfig, opts ...grpc.CallOption) (*GrpcAck, error) {
	out := new(GrpcAck)
	err := c.cc.Invoke(ctx, "/TxEventService/OnDisconnected", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// TxEventServiceServer is the server API for TxEventService service.
type TxEventServiceServer interface {
	OnConnected(*GrpcServiceConfig, TxEventService_OnConnectedServer) error
	OnTxEvent(context.Context, *GrpcTxEvent) (*GrpcAck, error)
	OnDisconnected(context.Context, *GrpcServiceConfig) (*GrpcAck, error)
}

func RegisterTxEventServiceServer(s *grpc.Server, srv TxEventServiceServer) {
	s.RegisterService(&_TxEventService_serviceDesc, srv)
}

func _TxEventService_OnConnected_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(GrpcServiceConfig)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(TxEventServiceServer).OnConnected(m, &txEventServiceOnConnectedServer{stream})
}

type TxEventService_OnConnectedServer interface {
	Send(*GrpcCompensateCommand) error
	grpc.ServerStream
}

type txEventServiceOnConnectedServer struct {
	grpc.ServerStream
}

func (x *txEventServiceOnConnectedServer) Send(m *GrpcCompensateCommand) error {
	return x.ServerStream.SendMsg(m)
}

func _TxEventService_OnTxEvent_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GrpcTxEvent)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TxEventServiceServer).OnTxEvent(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/TxEventService/OnTxEvent",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TxEventServiceServer).OnTxEvent(ctx, req.(*GrpcTxEvent))
	}
	return interceptor(ctx, in, info, handler)
}

func _TxEventService_OnDisconnected_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GrpcServiceConfig)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TxEventServiceServer).OnDisconnected(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/TxEventService/OnDisconnected",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TxEventServiceServer).OnDisconnected(ctx, req.(*GrpcServiceConfig))
	}
	return interceptor(ctx, in, info, handler)
}

var _TxEventService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "TxEventService",
	HandlerType: (*TxEventServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "OnTxEvent",
			Handler:    _TxEventService_OnTxEvent_Handler,
		},
		{
			MethodName: "OnDisconnected",
			Handler:    _TxEventService_OnDisconnected_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "OnConnected",
			Handler:       _TxEventService_OnConnected_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "GrpcTxEvent.proto",
}

func init() { proto.RegisterFile("GrpcTxEvent.proto", fileDescriptor_GrpcTxEvent_48a5d9a498bff5ac) }

var fileDescriptor_GrpcTxEvent_48a5d9a498bff5ac = []byte{
	// 458 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x93, 0xcf, 0x6e, 0x13, 0x31,
	0x10, 0xc6, 0xeb, 0x26, 0x69, 0xb2, 0x93, 0xa8, 0x12, 0x96, 0x40, 0xab, 0x08, 0xa1, 0x68, 0x11,
	0x52, 0x4e, 0x56, 0x55, 0xce, 0x1c, 0x68, 0x40, 0x88, 0x03, 0xa4, 0x5a, 0xca, 0x85, 0x0b, 0x72,
	0xbc, 0x6e, 0x58, 0x75, 0xfd, 0x47, 0xf6, 0x50, 0x25, 0x47, 0xde, 0x86, 0xd7, 0xe0, 0xcd, 0x90,
	0xbd, 0x1b, 0x76, 0x49, 0xa3, 0xc0, 0xcd, 0xf3, 0x7d, 0x33, 0x1e, 0xfb, 0xe7, 0x31, 0x3c, 0x7a,
	0xe7, 0xac, 0xb8, 0xd9, 0xbc, 0xbd, 0x97, 0x1a, 0x99, 0x75, 0x06, 0x4d, 0xf6, 0xb9, 0x16, 0x3f,
	0x49, 0x77, 0x5f, 0x0a, 0xb9, 0x30, 0xfa, 0xb6, 0x5c, 0xd3, 0x19, 0x8c, 0x7d, 0x2d, 0x7c, 0xe4,
	0x4a, 0xa6, 0x64, 0x46, 0xe6, 0x49, 0xde, 0x95, 0xe8, 0x33, 0x80, 0x52, 0x7b, 0xe4, 0x5a, 0xc8,
	0xf7, 0x45, 0x7a, 0x1a, 0x13, 0x3a, 0x4a, 0xf6, 0x1c, 0x86, 0x61, 0xdb, 0xd7, 0xe2, 0x8e, 0xa6,
	0x30, 0xe4, 0x2b, 0xe3, 0x50, 0x16, 0x71, 0xa3, 0x51, 0xbe, 0x0b, 0xb3, 0x1f, 0x3d, 0x18, 0x77,
	0x4e, 0x44, 0x9f, 0x42, 0x82, 0xa5, 0x92, 0x1e, 0xb9, 0xb2, 0x31, 0xb7, 0x97, 0xb7, 0x42, 0x68,
	0xb9, 0xae, 0xcc, 0x8a, 0x57, 0x37, 0x9b, 0xb6, 0x65, 0xab, 0x84, 0xea, 0xca, 0x88, 0xc6, 0xee,
	0x45, 0xbb, 0x15, 0x42, 0xb5, 0xe5, 0x4e, 0x6a, 0x8c, 0x76, 0xbf, 0xae, 0x6e, 0x15, 0x4a, 0xa1,
	0x8f, 0x5b, 0x2b, 0xd3, 0x41, 0x74, 0xe2, 0x9a, 0x32, 0xa0, 0xc2, 0x28, 0x2b, 0xb5, 0xe7, 0x58,
	0x1a, 0xfd, 0x41, 0xe2, 0x37, 0x53, 0xa4, 0x67, 0x31, 0xe3, 0x80, 0x43, 0xa7, 0x30, 0xb2, 0x7c,
	0x5b, 0x19, 0x5e, 0xf8, 0x74, 0x38, 0x23, 0xf3, 0x49, 0xfe, 0x27, 0xde, 0x47, 0x3a, 0xfa, 0x17,
	0xd2, 0x64, 0x1f, 0x69, 0xe0, 0x18, 0x60, 0x98, 0xef, 0x98, 0xc2, 0x8c, 0xcc, 0x07, 0xf9, 0x2e,
	0x0c, 0x8e, 0x93, 0xe8, 0x4a, 0xe9, 0xd3, 0x71, 0xed, 0x34, 0x61, 0xe8, 0x1a, 0x96, 0xdb, 0xe6,
	0xe8, 0x93, 0xba, 0x6b, 0x47, 0xca, 0x7e, 0x11, 0x78, 0x1c, 0xde, 0x60, 0xb1, 0xbb, 0x8e, 0x5c,
	0x18, 0xa5, 0xb8, 0x2e, 0xf6, 0x78, 0x93, 0xe3, 0xbc, 0x4f, 0x8f, 0xf3, 0xee, 0x3d, 0xe0, 0x7d,
	0x98, 0x6d, 0xff, 0xbf, 0xd8, 0x0e, 0xfe, 0x66, 0x7b, 0xf9, 0x93, 0xc0, 0x79, 0x33, 0x43, 0xcd,
	0x1c, 0xd3, 0x57, 0x30, 0x5e, 0xea, 0x85, 0xd1, 0x5a, 0x0a, 0x94, 0x05, 0xa5, 0xec, 0xc1, 0x90,
	0x4f, 0x9f, 0xb0, 0x83, 0xf7, 0xce, 0x4e, 0x2e, 0x08, 0x7d, 0x01, 0xc9, 0x52, 0xef, 0xc6, 0x72,
	0xc2, 0x3a, 0x43, 0x3a, 0x1d, 0xb1, 0x66, 0xb0, 0xb3, 0x13, 0x7a, 0x01, 0xe7, 0x4b, 0xfd, 0xa6,
	0xf4, 0xe2, 0x68, 0xa3, 0x4e, 0xc5, 0xd5, 0x12, 0x2e, 0x85, 0x51, 0x0c, 0x3d, 0x72, 0x71, 0xc7,
	0x14, 0x47, 0x57, 0x6e, 0x98, 0xad, 0x38, 0xde, 0x1a, 0xa7, 0x98, 0xe7, 0x6b, 0xce, 0x6c, 0x70,
	0x84, 0xd1, 0xe8, 0xb8, 0x40, 0xb6, 0x76, 0x56, 0x5c, 0x4d, 0x9a, 0xe6, 0xd7, 0xe1, 0xcb, 0x5e,
	0x93, 0x2f, 0x49, 0x48, 0xfc, 0x1a, 0xac, 0xd5, 0x59, 0xfc, 0xc6, 0x2f, 0x7f, 0x07, 0x00, 0x00,
	0xff, 0xff, 0x75, 0xaa, 0xa0, 0xab, 0xdb, 0x03, 0x00, 0x00,
}
